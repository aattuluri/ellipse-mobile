
Table(
                        children: [
                          TableRow(
                            children: [
                              InkWell(
                                onTap: () => Navigator.pushNamed(
                                    context, Routes.my_events),
                                child: ItemCard(
                                    text: "Your Events",
                                    icon: Icons.event_note),
                              ),
                              ItemCard(
                                  text: "Registered Events",
                                  icon: Icons.event_available),
                            ],
                          ),
                        ],
                      ),


_buildSectionHeader2(),
SizedBox(height: 10.0),
model.isLoading || model.loadingFailed
? _loadingIndicator
    : Container(
height: 250.0,
child: Center(
child: ListView.builder(
physics: ClampingScrollPhysics(),
scrollDirection: Axis.horizontal,
itemCount: model.allEvents?.length,
shrinkWrap: true,
itemBuilder:
(BuildContext context, int index) {
final Events event =
model.allEvents[index];
final sdate =
DateTime.parse(event.start_time)
    .toLocal();
print(sdate);
return sdate.isAfter(DateTime.now())
? Padding(
padding: EdgeInsets.symmetric(
horizontal: 5.0,
vertical: 10.0,
),
child: Card(
shape: RoundedRectangleBorder(
borderRadius:
BorderRadius.all(
Radius.circular(10.0),
),
),
elevation: 4.0,
child: InkWell(
borderRadius:
BorderRadius.all(
Radius.circular(10.0),
),
onTap: () =>
Navigator.pushNamed(
context,
Routes.info_page,
arguments: {
'index': index
}),
child: ClipRRect(
borderRadius:
BorderRadius.all(
Radius.circular(10.0),
),
child: CachedNetworkImage(
imageUrl:
"${Url.URL}/api/image?id=${event.imageUrl}",
filterQuality:
FilterQuality.high,
fadeInDuration: Duration(
milliseconds: 1000),
placeholder:
(context, url) =>
Icon(
Icons.image,
size: 80,
),
errorWidget: (context,
url, error) =>
Icon(
Icons.error,
size: 80,
),
),
//Image.memory(
// base64Decode(
//    event.imageUrl),
//fit: BoxFit.cover),
),
),
),
)
    : Container();
}),
),
),



 _buildSectionHeader2() {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: <Widget>[
        Flexible(
          child: Text(
            'Other Events',
            style: TextStyle(
              fontSize: 20.0,
              fontWeight: FontWeight.w500,
            ),
            maxLines: 1,
            overflow: TextOverflow.ellipsis,
          ),
        ),
        GestureDetector(
          onTap: () {},
          child: Text(
            'See All',
            style: TextStyle(
              color: Theme.of(context).accentColor,
              fontWeight: FontWeight.w400,
            ),
          ),
        ),
      ],
    );
  }



  Card(
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(10),
                            ),
                            elevation: 5,
                            //decoration: BoxDecoration(
                            // borderRadius: BorderRadius.circular(10.0)),
                            child: Padding(
                              padding: const EdgeInsets.all(2.0),
                              child: InkWell(
                                onTap: () {
                                  Navigator.pushNamed(
                                    context,
                                    Routes.start,
                                    arguments: {'currebt_tab': 1},
                                  );
                                },
                                child: TextField(
                                  enabled: false,
                                  decoration: InputDecoration(
                                      hintText:
                                          'Lets explore some events here...',
                                      hintStyle: TextStyle(fontSize: 17.0),
                                      border: InputBorder.none,
                                      //fillColor: Colors.grey.withOpacity(0.5),
                                      prefixIcon:
                                          Icon(Icons.search, color: Colors.grey)),
                                ),
                              ),
                            )),







  Padding(
                          padding: const EdgeInsets.only(left: 5),
                          child: Row(
                            children: <Widget>[
                              Image.asset(
                                "assets/logo.png",
                                height: 40,
                              ),
                              SizedBox(
                                width: 8,
                              ),
                              Row(
                                children: <Widget>[
                                  Text(
                                    "Ell",
                                    style: TextStyle(
                                        color: Theme.of(context)
                                            .textTheme
                                            .bodyText1
                                            .color,
                                        fontSize: 35,
                                        fontWeight: FontWeight.w800),
                                  ),
                                  Text(
                                    "ipse",
                                    style: TextStyle(
                                        color: Color(0xffFCCD00),
                                        fontSize: 35,
                                        fontWeight: FontWeight.w800),
                                  )
                                ],
                              ),
                              Spacer(),
                              Icon(
                                Icons.blur_on,
                                size: 25,
                              )
                            ],
                          ),
                        ),